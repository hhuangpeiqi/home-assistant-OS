#!/bin/bash
# ==========================================================================
# author   : huangpeiqi
# use      : Local build
# usage    : ./build ; ./build make ova; ./build --region cn/global make ova
# ==========================================================================
set -e

# 当前宿主机
sudo uname -a

REGION=""
ARGS=()
SHOULD_RESTORE=0

TARGET=""
DEFCONFIG_PATH=""
BACKUP_PATH=""

FILES_TO_RESTORE=(
  buildroot-external/package/hassio/hassio.mk
  buildroot-external/package/hassio/dind-import-containers.sh
  buildroot-external/rootfs-overlay/usr/sbin/hassos-supervisor
  buildroot-external/rootfs-overlay/etc/NetworkManager/NetworkManager.conf
  buildroot-external/rootfs-overlay/etc/systemd/timesyncd.conf

  ./Dockerfile
  scripts/entry.sh
  scripts/enter.sh
)

BACKUP_DIR="/tmp/region_backup_$$"
mkdir -p "$BACKUP_DIR"


cleanup() {
  echo "==> Running cleanup..."

  if [[ -n "$TARGET" && -f "$BACKUP_PATH" ]]; then
    echo "-- Restoring original defconfig..."
    cp "$BACKUP_PATH" "$DEFCONFIG_PATH"
    rm -f "$BACKUP_PATH"
  fi

  if [[ "$SHOULD_RESTORE" -eq 1 ]]; then
    echo "-- Restoring region-modified files..."
    for file in "${FILES_TO_RESTORE[@]}"; do
      local backup_file="$BACKUP_DIR/${file//\//_}"
      if [[ -f "$backup_file" ]]; then
        cp "$backup_file" "$file"
      fi
    done
  else
    echo "-- No region-specific restoration needed."
  fi
  rm -rf "$BACKUP_DIR"

}
trap cleanup EXIT


# 备份FILES_TO_RESTORE
for file in "${FILES_TO_RESTORE[@]}"; do
  if [[ -f "$file" ]]; then
    cp "$file" "$BACKUP_DIR/${file//\//_}"
  fi
done


apply_region_cn() {
  echo "-- CN-specific settings"

  sed -i 's|version.home-assistant.io|version.hasscn.top|g' buildroot-external/package/hassio/hassio.mk
  sed -i 's|ghcr.io/home-assistant|ghcr.nju.edu.cn/ha-china|g' buildroot-external/package/hassio/dind-import-containers.sh
  sed -i 's|ghcr.io/home-assistant|ghcr.nju.edu.cn/ha-china|g' buildroot-external/rootfs-overlay/usr/sbin/hassos-supervisor
  sed -i 's|checkonline.home-assistant.io|version.hasscn.top|g' buildroot-external/rootfs-overlay/etc/NetworkManager/NetworkManager.conf
  sed -i 's|time.cloudflare.com|ntp.ntsc.ac.cn|g' buildroot-external/rootfs-overlay/etc/systemd/timesyncd.conf

}
apply_region_global() {
  echo "-- Applying Global-specific settings"
}


# 参数解析
while [[ $# -gt 0 ]]; do
  case "$1" in
    --region)
      if [[ -z "$2" || "$2" =~ ^-- ]]; then
        echo "Error: --region requires a value (e.g. cn or global)"
        exit 1
      fi
      REGION="$2"
      shift 2
      ;;
    *)
      ARGS+=("$1")
      shift
      ;;
  esac
done


# 应用国内配置
if [[ -n "$REGION" ]]; then
  echo "==> Applying region-specific configuration: $REGION"
  case "$REGION" in
    cn)
      apply_region_cn
      ;;
    global)
      apply_region_global
      ;;
    *)
      echo "Unknown region: $REGION"
      exit 1
      ;;
  esac
fi


# 动态加入buildroot包
COMMAND="${ARGS[*]}"
if [[ "$COMMAND" =~ ^make[[:space:]]+([a-zA-Z0-9_-]+)$ ]]; then
  TARGET="${BASH_REMATCH[1]}"

  # 排除 clean 和 distclean
  if [[ "$TARGET" == "clean" || "$TARGET" == "distclean" ]]; then
    echo "==> Skipping defconfig modification for target: $TARGET"
  else
    DEFCONFIG_PATH="./buildroot-external/configs/${TARGET}_defconfig"
    BACKUP_PATH="/tmp/${TARGET}_defconfig.bak"

    echo "==> Detected build target: $TARGET"
    echo "-- Modifying defconfig at: $DEFCONFIG_PATH"

    if [[ -f "$DEFCONFIG_PATH" ]]; then
      cp "$DEFCONFIG_PATH" "$BACKUP_PATH"
      echo "-- Backup created at: $BACKUP_PATH"

      COMPONENTS=(
        "BR2_PACKAGE_WGET=y"
        "BR2_PACKAGE_HTOP=y"
        "BR2_PACKAGE_VIM=y"
        "BR2_PACKAGE_UNZIP=y"
      )

      for component in "${COMPONENTS[@]}"; do
        grep -q "^$component$" "$DEFCONFIG_PATH" || echo "$component" >> "$DEFCONFIG_PATH"
      done
    else
      echo "!!! Warning: Defconfig file not found: $DEFCONFIG_PATH"
    fi
  fi
fi


# 本地编译使用国内加速
if [ -f ~/tmp/Dockerfile ]; then
    cp ~/tmp/Dockerfile ./Dockerfile
fi
if [ -f ~/tmp/entry.sh ]; then
    cp ~/tmp/entry.sh ./scripts/entry.sh
fi
if [ -f ~/tmp/enter.sh ]; then
    cp ~/tmp/enter.sh ./scripts/enter.sh
fi
SHOULD_RESTORE=1


# 进入官方构建
scripts/enter.sh "${ARGS[@]}"
date
